# -------------------------
# tensorflow_gpu_py3-v4.3.0
# -------------------------
# [From clean shell]

cd /data/user/mhuennefeld/DNN_reco/virtualenvs
eval $(/cvmfs/icecube.opensciencegrid.org/py3-v4.3.0/setup.sh)

python -m virtualenv /data/user/mhuennefeld/DNN_reco/virtualenvs/tensorflow_gpu_py3-v4.3.0
source tensorflow_gpu_py3-v4.3.0/bin/activate

# install tensorflow 2.14 (CUDA 11 and cuDNN 8.7)
pip install tensorflow[and-cuda]==2.14 tensorflow_probability==0.22.1 
pip install numpy scipy click pyyaml pandas matplotlib pybind11 uncertainties ruamel.yaml gitpython tqdm tables histlite bottleneck python-telegram-bot slackclient healpy xgboost mceq nuveto hirola

# change activation script such that it prepends the path
# to the virtual environment to the PYTHONPATH
# make sure to check that python version, i.e python3.11 and correct virtual env name are chosen
perl -i -0pe 's/_OLD_VIRTUAL_PATH\="\$PATH"\nPATH\="\$VIRTUAL_ENV\/bin:\$PATH"\nexport PATH/_OLD_VIRTUAL_PATH\="\$PATH"\nPATH\="\$VIRTUAL_ENV\/bin:\$PATH"\nexport PATH\n\n# prepend virtual env path to PYTHONPATH if set\nif ! \[ -z "\$\{PYTHONPATH+_\}" \] ; then\n    _OLD_VIRTUAL_PYTHONPATH\="\$PYTHONPATH"\n    export PYTHONPATH\=\$VIRTUAL_ENV\/lib\/python3.11\/site-packages:\$PYTHONPATH\nfi/' tensorflow_gpu_py3-v4.3.0/bin/activate
perl -i -0pe 's/        export PYTHONHOME\n        unset _OLD_VIRTUAL_PYTHONHOME\n    fi/        export PYTHONHOME\n        unset _OLD_VIRTUAL_PYTHONHOME\n    fi\n\n    if ! \[ -z "\$\{_OLD_VIRTUAL_PYTHONPATH+_\}" \] ; then\n        PYTHONPATH\="\$_OLD_VIRTUAL_PYTHONPATH"\n        export PYTHONPATH\n        unset _OLD_VIRTUAL_PYTHONPATH\n    fi/' tensorflow_gpu_py3-v4.3.0/bin/activate

# [Exit shell]
# [Now install IceCube Metaproject while having this virtual env activated]
# [From clean shell]

cd /data/user/mhuennefeld/DNN_reco/virtualenvs
# Note: something changes in icetray v1.12.0 in how the linking is performed
# If import errors occur: make sure to delete old wheels. Here it helped to modify
# the underlying c++ file before installing via pip.
/cvmfs/icecube.opensciencegrid.org/py3-v4.3.0/RHEL_7_x86_64/metaprojects/icetray/v1.12.0/env-shell.sh
source tensorflow_gpu_py3-v4.3.0/bin/activate

pip install -e  /data/user/mhuennefeld/software/repositories/TFScriptsV2
pip install /data/user/mhuennefeld/software/repositories/ic3-data--non-editable
pip install -e  /data/user/mhuennefeld/software/repositories/ic3-processing
pip install -e  /data/user/mhuennefeld/software/repositories/ic3-labels
pip install -e  /data/user/mhuennefeld/software/repositories/gp_studies
pip install -e  /data/user/mhuennefeld/software/repositories/event-generator
pip install -e  /data/user/mhuennefeld/software/repositories/dnn_recoV2compatV1
pip install -e  /data/user/mhuennefeld/software/repositories/dnn_cascade_selection

pip install -e /data/user/mhuennefeld/software/repositories/dnn_selections

pip install wipac-rest-tools

# if there is a HDF5 version mismatch we must install h5py from source
# see instructions in /data/user/mhuennefeld/software/h5py/README
# Note: newer cython version may cause issues in compiling of older h5py version
# A version that works is: Cython==0.29.33
HDF5_VERSION=1.14.0 HDF5_DIR=/cvmfs/icecube.opensciencegrid.org/py3-v4.3.0/RHEL_7_x86_64/spack/opt/spack/linux-centos7-x86_64_v2/gcc-13.1.0/hdf5-1.14.0-4p2djysy6f7vful3egmycsguijjddkah pip install --no-binary=h5py h5py==3.11.0

pip install ipython
pip install jupyter
pip install -U ipykernel

# install kernel
python -m ipykernel install --user --name=tensorflow_gpu_py3-v4.3.0

# create manual kernel for jupyterlab to include icetray and proper cuda path
# Step 1: create start__*.sh kernel script
#        - Copy one of the existing files
#        - set appropriate cuda director
#        - start python env
# Step 2: create manual kernel
#        - copy directory of above created kernel and add __manual in the name
#        - adjust kernel.json to execute start__ script
